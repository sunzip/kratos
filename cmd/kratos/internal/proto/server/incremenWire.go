package server

import (
	"fmt"
	"log"
	"os"
	"path"
)

// https://www.jianshu.com/p/937d649039ec

// 增量处理
/*
	internal/prottocol/register.go
*/

// 增加方法
//  在 // service grpc 之后添加?
//  1. import 里添加
// 		"xxxx/module/xxx"
//  2. autoWireApp 里添加
// 		leiRTC.ProviderSet,
func incrementCmdServer(fileDir, fileName string, sourceFile *SourceFile, s *Service) bool {

	filePath := path.Join(fileDir, fileName)
	bs, err := os.ReadFile(filePath)
	if err != nil {
		panic(err)
	}

	// todo: infopb 需要参数告知

	// 2.
	providerSet := fmt.Sprintf(`//Code generated by %s. (语句已存在则不覆盖).
		%s.ProviderSet,`,
		s.ToolName, s.ServiceLower)
	if !sourceFile.LineExist[wireAutoWireAppPanicBuildParam] {
		startPos := sourceFile.AutoWireAppPanicBuildLastParam.StartPos
		if startPos > 0 {
			pre := bs[:startPos]
			next := append([]byte{}, bs[startPos:]...)
			bs = append(pre, []byte(providerSet+getEndOfLine()+"		")...)
			bs = append(bs, next...)
		} else {
			fmt.Printf("没有找到 autoWireApp. panic. Build \n")
		}
	} else {
		fmt.Printf("autoWireApp 参数语句 %s 已存在\n", providerSet)
	}
	// 1. import
	packageName := changeDir(s.Package, "/api/", fmt.Sprintf("/internal/module/%s", s.ServiceLower))
	importLine := fmt.Sprintf(`	//Code generated by %s. (字段已存在则不覆盖).
	"%s"`, s.ToolName, packageName)
	if !sourceFile.LineExist[wireImport] {
		pre := bs[:sourceFile.Imports.EndPos]
		next := append([]byte{}, bs[sourceFile.Imports.EndPos:]...)
		bs = append(pre, []byte(importLine)...)
		var newLine byte = '\n' //增加换行
		bs = append(bs, newLine)
		bs = append(bs, next...)

	} else {
		fmt.Printf("wire import语句 %s 已存在\n", importLine)
	}

	// test
	filePath = path.Join(fileDir, fileName)
	if err := os.WriteFile(filePath, bs, 0o644); err != nil {
		log.Fatal(err)
	}

	return true
}
